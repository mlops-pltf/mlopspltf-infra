name: Push To Feature Branch
on:
  push:
    branches:
      - feature/*
  workflow_dispatch:
jobs:
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -> to the current commit of a PR branch.
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  changed-files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4

      - name: Get All Changed Files
        id: get-all-changed-files
        uses: tj-actions/changed-files@v45
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
          # since_last_remote_commit: true

      - name: List Updated Terraform Directories
        id: list-updated-tf-dirs
        env:
          ALL_CHANGED_FILES: ${{ steps.get-all-changed-files.outputs.all_changed_files }}
        shell: python
        run: |
          import os
          import sys
          changed_file = os.environ['ALL_CHANGED_FILES']
          print(changed_file)
          paths_to_be_used = list()
          for file in changed_file.split(' '):
            if file.endswith('.tf'):
              if file not in paths_to_be_used:
                paths_to_be_used.append(
                  '/'.join(
                    file.split('/')[:-1]
                  )
                )
          if len(paths_to_be_used) == 0:
            print('This commit does not contain any Terraform related changes. We will not move further.')
            raise Exception('No terraform changes are found')
            sys.exit(1)
          else:
            print(f'Updated Terraform paths: {paths_to_be_used}')
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"updated_tf_dirs={paths_to_be_used}")
        continue-on-error: true
    outputs:
      status: ${{ job.status}}
      updated_tf_dirs: ${{ steps.list-updated-tf-dirs.outputs.updated_tf_dirs }}
  terraform-required-check:
    needs: changed-files
    if: needs.changed-files.outputs.status == 'success'
    runs-on: ubuntu-latest
  terraform-tasks:
    needs:
      - terraform-required-check
      - changed-files
    runs-on: ubuntu-latest
    strategy:
        matrix:
            updated_tf_dir: ${{ fromJson(needs.changed-files.outputs.updated_tf_dirs) }}
    steps:
      - uses: actions/checkout@v2

      - name: Terraform Format Check
        id: tf-fmt-check
        working-directory: ${{ matrix.updated_tf_dir}}
        run: |
          pwd
          terraform fmt -check